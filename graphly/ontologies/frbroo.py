# File automatically generated by python script, from OntoMe API
# Script located at: graphly/scripts/ontologies.ipynb

from graphly.schema.ontology import Ontology
from graphly.schema.resource import Resource

class FRBROO(Ontology):

    def __init__(self) -> None:
        super().__init__('FRBRoo version 2.4', 'frbroo', 'http://iflastandards.info/ns/fr/frbr/frbroo/')

    # Classes
    F2_Expression = Resource("frbroo:F2", "Expression", class_uri="owl:Class")
    F4_Manifestation_Singleton = Resource("frbroo:F4", "Manifestation Singleton", class_uri="owl:Class")
    F28_Expression_Creation = Resource("frbroo:F28", "Expression Creation", class_uri="owl:Class")
    F3_Manifestation_Product_Type = Resource("frbroo:F3", "Manifestation Product Type", class_uri="owl:Class")
    F5_Item = Resource("frbroo:F5", "Item", class_uri="owl:Class")
    F18_Serial_Work = Resource("frbroo:F18", "Serial Work", class_uri="owl:Class")
    F1_Work = Resource("frbroo:F1", "Work", class_uri="owl:Class")

    # Properties
    R17_Created = Resource("frbroo:R17", "created", class_uri="owl:Property")
    R18_Created = Resource("frbroo:R18", "created", class_uri="owl:Property")
    R4_Carriers_Provided_By = Resource("frbroo:R4", "carriers provided by", class_uri="owl:Property")
    R7_Is_Example_Of = Resource("frbroo:R7", "is example of", class_uri="owl:Property")
    R42_Is_Representative_Manifestation_Singleton_For = Resource("frbroo:R42", "is representative manifestation singleton for", class_uri="owl:Property")
    R19_Created_A_Realisation_Of = Resource("frbroo:R19", "created a realisation of", class_uri="owl:Property")
    R41_Has_Representative_Manifestation_Product_Type = Resource("frbroo:R41", "has representative manifestation product type", class_uri="owl:Property")
